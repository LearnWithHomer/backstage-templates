apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ec2-instance
  title: Provision an AWS EC2 Instance
  description: Provision AWS EC2 Instance using Terraform
spec:
  owner: group:devops
  type: service

  parameters:
    - title: Project Details
      required:
        - name
        - description
      properties:
        name:
          title: Project Name
          type: string
          description: Unique name. No spaces. No symbols.
          maxLength: 50
          ui:autofocus: true
        description:
          title: Project Description
          type: string
          description: A short description
    - title: Action
      required:
        - action
      properties:
        action:
          title: Action
          type: string
          description: Action to perform (apply/destroy)
          enum:
            - apply
            - destroy

  steps:
    # - id: fetch-base
    #   name: Fetch Base
    #   action: fetch:template
    #   input:
    #     url: ./skeleton
    #     values:
    #       name: ${{ parameters.name }}
    # # This step publishes the contents of the working directory to GitHub.
    # - id: publish
    #   name: Publish
    #   action: publish:github
    #   input:
    #     allowedHosts: ["github.com"]
    #     description: This is ${{ parameters.name }}
    #     repoUrl: ${{ parameters.repoUrl }}
        # sourcePath:
    # Start a GitHub Action to build an EC2 instance with Terraform
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: manage-ec2.yml
        repoUrl: "github.com?repo=backstage-templates&owner=LearnWithHomer"
        branchOrTagName: "main"
        workflowInputs:
          action: ${{ parameters.action }}
    # The final step is to register our new component in the catalog.
    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: "${{ steps.publish.output.repoContentsUrl }}"
    #     catalogInfoPath: "/catalog-info.yaml"

  # Outputs are displayed to the user after a successful execution of the template.
  # output:
  #   links:
  #     - title: Repository
  #       url: ${{ steps['publish'].output.remoteUrl }}
  #     - title: Open in catalog
  #       icon: catalog
  #       entityRef: ${{ steps['register'].output.entityRef }}
